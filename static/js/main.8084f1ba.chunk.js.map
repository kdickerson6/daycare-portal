{"version":3,"sources":["aubdaycare.png","Form.js","Confirmation.js","CheckInOut.js","Graphs.js","PersonInfo.js","Lookup.js","AdminTabs.js","Admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","e","setState","target","value","console","log","enterClickHandler","react_default","a","createElement","lib","offset","s","m","l","label","onChange","handleInputChange","bind","waves","onClick","Component","Confirmation","action","testPerson","require","persons","CheckInOut","checkIn","confirmed","last_action","type","cancelClickHandler","getLastAction","isCheckIn","isConfirmed","className","src_Confirmation","currentId","name","time","checkInOutHandler","Graphs","large","PersonInfo","backClickHandler","Lookup","displayInfo","shouldDisplayInfo","src_PersonInfo","handleBackClick","handleSearchClick","AdminTabs","title","active","src_Graphs","src_Lookup","Admin","src_AdminTabs","App","displayCheckInOut","displayAdmin","idValue","shouldDisplayCheckInOut","shouldDisplayAdmin","brand","href","right","handleHomeClick","handleAdminClick","src_Admin","src","Logo","alt","src_CheckInOut","handleCancelClick","src_Form","handleEnterClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+lBCqCzBC,cAjCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,GAAI,IAHOR,iFAODS,GACdN,KAAKO,SAAS,CAACF,GAAIC,EAAEE,OAAOC,oDAI5B,IAAIJ,EAAKL,KAAKI,MAAMC,GACpBK,QAAQC,IAAI,gBAAiBN,GAC7BL,KAAKJ,MAAMgB,kBAAkBZ,KAAKI,MAAMC,qCAIxC,OACIQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6DACAF,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKC,OAAO,aACZJ,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOE,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,MAAM,uBAAuBC,SAAUtB,KAAKuB,kBAAkBC,KAAKxB,SAEhGa,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQS,MAAM,QAAQC,QAAS1B,KAAKY,kBAAkBY,KAAKxB,OAA3D,kBA3BD2B,aCSJC,mLARP,OACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mDAA2Cf,KAAKJ,MAAMiC,OAAtD,aAJWF,aCGvBG,EADaC,EAAQ,IACGC,QAAQ,GA0DrBC,cAvDX,SAAAA,EAAYrC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACfpC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAA9B,KAAAH,KAAMJ,KACDQ,MAAM,CACP8B,SAAS,EACTC,WAAW,EACXN,OAAQ,IALGhC,+EAUoB,aAAhCiC,EAAWM,YAAYC,KACtBrC,KAAKO,SAAS,CAAC2B,SAAS,IACc,cAAhCJ,EAAWM,YAAYC,MAC7BrC,KAAKO,SAAS,CAAC2B,SAAS,iDAK5BlC,KAAKJ,MAAM0C,iEAKRtC,KAAKI,MAAM8B,SACVxB,QAAQC,IAAI,qBACZX,KAAKO,SAAS,CAACsB,OAAQ,iBAEvBnB,QAAQC,IAAI,sBACZX,KAAKO,SAAS,CAACsB,OAAQ,iBAG3B7B,KAAKO,SAAS,CAAC4B,WAAW,qCAI1BnC,KAAKuC,cAAcf,KAAKxB,MACxB,IAAMwC,EAAYxC,KAAKI,MAAM8B,QACvBO,EAAczC,KAAKI,MAAM+B,UAG/B,OACItB,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,cACdD,EAAc5B,EAAAC,EAAAC,cAAC4B,EAAD,CAAcd,OAAQ7B,KAAKI,MAAMyB,SAE5ChB,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,cACX7B,EAAAC,EAAAC,cAAA,wBAAgBf,KAAKJ,MAAMgD,WAC3B/B,EAAAC,EAAAC,cAAA,mBAAWe,EAAWe,MACrBL,EAAY3B,EAAAC,EAAAC,cAAA,kCAA0Be,EAAWM,YAAYU,MAAajC,EAAAC,EAAAC,cAAA,iCAAyBe,EAAWM,YAAYU,MAC3HjC,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQ0B,UAAU,gBAAgBjB,MAAM,QAAQC,QAAS1B,KAAKsC,mBAAmBd,KAAKxB,OAAtF,UAJJ,IAIkHwC,EAAY3B,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQS,MAAM,QAAQC,QAAS1B,KAAK+C,kBAAkBvB,KAAKxB,OAA3D,WAAqFa,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQS,MAAM,QAAQC,QAAS1B,KAAK+C,kBAAkBvB,KAAKxB,OAA3D,qBAjD1M2B,aCUVqB,mLAZP,OACInC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKC,OAAO,WAAWC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAGP,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMiC,OAAK,GAAX,iBACzCpC,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKE,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAAGP,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAMiC,OAAK,GAAX,0BAPtBtB,aCgBNuB,6LAbXlD,KAAKJ,MAAMuD,oDAIP,OACItC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQS,MAAM,QAAQC,QAAS1B,KAAKmD,iBAAiB3B,KAAKxB,OAA1D,gBAVS2B,aC6CVyB,cA3CX,SAAAA,EAAYxD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACfvD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsD,GAAAjD,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,GAAI,GACJgD,aAAa,GAJFxD,iFAQDS,GACdN,KAAKO,SAAS,CAACF,GAAIC,EAAEE,OAAOC,QAC5BC,QAAQC,IAAI,WAAaL,EAAEE,OAAOC,mDAIlCT,KAAKO,SAAS,CAAC8C,aAAa,8CAI5BrD,KAAKO,SAAS,CAAC8C,aAAa,qCAI5B,IAAMC,EAAoBtD,KAAKI,MAAMiD,YAErC,OACIxC,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,UACVY,EAAoBzC,EAAAC,EAAAC,cAACwC,EAAD,CAAYJ,iBAAkBnD,KAAKwD,gBAAgBhC,KAAKxB,QACzEa,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2EACAF,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAKC,OAAO,aACZJ,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOE,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,MAAM,uBAAuBC,SAAUtB,KAAKuB,kBAAkBC,KAAKxB,SAEhGa,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQS,MAAM,QAAQC,QAAS1B,KAAKyD,kBAAkBjC,KAAKxB,OAA3D,oBAnCP2B,aCiBN+B,mLAdP,OACI7C,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,cACf7B,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,KAAD,CAAM0B,UAAU,sBACZ7B,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAK2C,MAAM,YAAYC,QAAM,GAAE/C,EAAAC,EAAAC,cAAC8C,EAAD,OAC/BhD,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAK2C,MAAM,UAAS9C,EAAAC,EAAAC,cAAC+C,EAAD,OACpBjD,EAAAC,EAAAC,cAACC,EAAA,IAAD,CAAK2C,MAAM,UAAX,oBARIhC,aCQToC,mLARP,OACIlD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiD,EAAD,cAJIrC,8BCyDLsC,qBAnDb,SAAAA,EAAYrE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiE,IACjBpE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmE,GAAA9D,KAAAH,KAAMJ,KACDQ,MAAQ,CACX8D,mBAAmB,EACnBC,cAAc,EACd9D,GAAG,IALYR,gFASFuE,GACfpE,KAAKO,SAAS,CAAC2D,mBAAmB,EAAM7D,GAAG+D,gDAI3CpE,KAAKO,SAAS,CAAC2D,mBAAmB,EAAOC,cAAc,EAAO9D,GAAI,gDAIlEL,KAAKO,SAAS,CAAC4D,cAAa,8CAI5BnE,KAAKO,SAAS,CAAC2D,mBAAmB,EAAOC,cAAc,qCAKvD,IAAME,EAA0BrE,KAAKI,MAAM8D,kBACrCI,EAAqBtE,KAAKI,MAAM+D,aAEtC,OACEtD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQ0B,UAAU,MAAM6B,MAAM,kBAAkBC,KAAK,+CAA+CC,OAAK,GACvG5D,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,QAAS1B,KAAK0E,gBAAgBlD,KAAKxB,OAA5C,QACAa,EAAAC,EAAAC,cAACC,EAAA,QAAD,CAASU,QAAS1B,KAAK2E,iBAAiBnD,KAAKxB,OAA7C,WAGHsE,EAAqBzD,EAAAC,EAAAC,cAAC6D,EAAD,MACrB/D,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAQ2B,UAAU,cAChB7B,EAAAC,EAAAC,cAAA,OAAK8D,IAAKC,IAAMC,IAAI,MAEtBlE,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OAAO2B,EAA0BxD,EAAAC,EAAAC,cAACiE,EAAD,CAAYpC,UAAW5C,KAAKI,MAAMC,GAAIiC,mBAAoBtC,KAAKiF,kBAAkBzD,KAAKxB,QAAWa,EAAAC,EAAAC,cAACmE,EAAD,CAAMtE,kBAAmBZ,KAAKmF,iBAAiB3D,KAAKxB,kBA5C7L2B,cCIEyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7E,EAAAC,EAAAC,cAAC4E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8084f1ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aubdaycare.aaca6e2a.png\";","import React, {Component} from 'react';\nimport {Row, Input, Col, Button} from 'react-materialize';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            id: ''\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n    }\n\n    enterClickHandler() {\n        var id = this.state.id;\n        console.log('entered id:  ', id);\n        this.props.enterClickHandler(this.state.id);\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Please enter your ID to check in or check out. </h4>\n                <Row>\n                    <Col offset=\"s3 m3 l4\"></Col>\n                    <Input s={6} m={6} l={4} label=\"Parent or Teacher ID\" onChange={this.handleInputChange.bind(this)} />\n                </Row>\n                <Row>\n                    <Button waves='light' onClick={this.enterClickHandler.bind(this)}>Enter</Button>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Form; ","import React, { Component } from 'react';\n\nclass Confirmation extends Component {\n    render() {\n        return(\n            <div>\n                <h4>Thank you! You have been successfully {this.props.action}!</h4>\n            </div>\n        );\n    }\n}\n\nexport default Confirmation; ","import React, { Component } from 'react';\nimport { Button } from 'react-materialize';\nimport Confirmation from './Confirmation.js';\n\nlet peopleData = require('./testData.json');\nlet testPerson = peopleData.persons[1];\n\nclass CheckInOut extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            checkIn: true,\n            confirmed: false,\n            action: ''\n        }\n    }\n\n    getLastAction() {\n        if(testPerson.last_action.type === 'check_in') {\n            this.setState({checkIn: true});\n        } else if(testPerson.last_action.type === 'check_out') {\n            this.setState({checkIn: false});\n        }\n    }\n\n    cancelClickHandler() {\n        this.props.cancelClickHandler();\n    }\n\n    checkInOutHandler() {\n        // For now console logging -- will obviously store something in the DB\n        if(this.state.checkIn) {\n            console.log('Check IN Recorded');\n            this.setState({action: 'checked in'});\n        } else {\n            console.log('Check OUT Recorded');\n            this.setState({action: 'checked out'});\n        }\n\n        this.setState({confirmed: true});\n    }\n\n    render() {\n        this.getLastAction.bind(this);\n        const isCheckIn = this.state.checkIn;\n        const isConfirmed = this.state.confirmed;\n\n        // Need to be able to query firebase and get the person's last action (check in or out) and display here \n        return(\n            <div className='CheckInOut'>\n            {isConfirmed ? <Confirmation action={this.state.action}/>\n                :\n                <div className='PersonInfo'>\n                    <h4>ID NUMBER: {this.props.currentId}</h4>\n                    <h4>Name: {testPerson.name}</h4>\n                    {isCheckIn ? <h5>Last Check Out Time: {testPerson.last_action.time}</h5> : <h5>Last Check In Time: {testPerson.last_action.time}</h5>}\n                    <Button className='red lighten-2' waves='light' onClick={this.cancelClickHandler.bind(this)}>CANCEL</Button> {isCheckIn ? <Button waves='light' onClick={this.checkInOutHandler.bind(this)}>CHECKIN</Button> : <Button waves='light' onClick={this.checkInOutHandler.bind(this)}>CHECKOUT</Button>}\n                </div>}       \n            </div>\n        );\n    }\n}\n\nexport default CheckInOut;","import React, { Component } from 'react';\nimport { Row, Col, Icon } from 'react-materialize';\n\nclass Graphs extends Component {\n    render() {\n        return(\n            <div>\n                <h4>Teacher graphs and stuff </h4>\n                <Row>\n                    <Col offset=\"s2 m2 l3\" s={6} m={4} l={4}><Icon large>insert_chart</Icon></Col>\n                    <Col s={6} m={4} l={4}><Icon large>insert_chart</Icon></Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Graphs;\n\n","import React, { Component } from 'react'; \nimport { Button } from 'react-materialize';\n\nclass PersonInfo extends Component {\n\nbackClickHandler() {\n    this.props.backClickHandler();\n}\n\n    render() {\n        return(\n            <div>\n                <h4>Person Name</h4>\n                <Button waves='light' onClick={this.backClickHandler.bind(this)}>Back</Button>\n            </div>\n        );\n    }\n}\n\nexport default PersonInfo; ","import React, { Component } from 'react';\nimport { Row, Col, Input, Button } from 'react-materialize';\nimport PersonInfo from './PersonInfo';\n\nclass Lookup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            id: '',\n            displayInfo: false\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n        console.log(\"ID VAL: \" + e.target.value);\n    }\n\n    handleSearchClick() {\n        this.setState({displayInfo: true});\n    }\n\n    handleBackClick() {\n        this.setState({displayInfo: false});\n    }\n\n    render() {\n        const shouldDisplayInfo = this.state.displayInfo;\n\n        return(\n            <div className=\"Lookup\">\n                {shouldDisplayInfo ? <PersonInfo backClickHandler={this.handleBackClick.bind(this)}/> : \n                    <div>\n                        <h4>Please enter a parent or teacher ID to retrieve information. </h4>\n                        <Row>\n                            <Col offset=\"s3 m3 l4\"></Col>\n                            <Input s={6} m={6} l={4} label=\"Parent or Teacher ID\" onChange={this.handleInputChange.bind(this)} />\n                        </Row>\n                        <Row>\n                            <Button waves='light' onClick={this.handleSearchClick.bind(this)}>Search</Button>\n                        </Row>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Lookup;","import React, { Component } from 'react';\nimport { Tab, Tabs, Row } from 'react-materialize';\nimport Graphs from './Graphs.js';\nimport Lookup from './Lookup.js';\n\nclass AdminTabs extends Component {\n    render() {\n        return(\n            <div className=\"Admin-tabs\">\n            <Row>\n                <Tabs className='tab-demo z-depth-1'>\n                    <Tab title=\"Dashboard\" active ><Graphs/></Tab>\n                    <Tab title=\"Lookup\"><Lookup/></Tab>\n                    <Tab title=\"Modify\">Test 3</Tab>\n                </Tabs>\n            </Row>\n            </div>\n        );\n    }\n}\n\nexport default AdminTabs;","import React, { Component } from 'react';\nimport AdminTabs from './AdminTabs';\n\nclass Admin extends Component {\n    render() {\n        return(\n            <div>\n                <AdminTabs/>\n            </div>\n        );\n    }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport {Navbar, NavItem} from 'react-materialize';\nimport Form from './Form.js';\nimport CheckInOut from './CheckInOut.js';\nimport Admin from './Admin.js';\nimport Logo from './aubdaycare.png';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayCheckInOut: false,\n      displayAdmin: false,\n      id:''\n    }\n  }\n\n  handleEnterClick(idValue) {\n    this.setState({displayCheckInOut: true, id:idValue});\n  }\n\n  handleCancelClick() {\n    this.setState({displayCheckInOut: false, displayAdmin: false, id: ''});\n  }\n\n  handleAdminClick() {\n    this.setState({displayAdmin:true});\n  }\n\n  handleHomeClick() {\n    this.setState({displayCheckInOut: false, displayAdmin: false});\n  }\n\n\n  render() {\n    const shouldDisplayCheckInOut = this.state.displayCheckInOut;\n    const shouldDisplayAdmin = this.state.displayAdmin;\n    var id = '';\n    return (\n      <div>\n        <nav>\n          <Navbar className=\"Nav\" brand='Day Care Portal' href='https://kdickerson6.github.io/daycare-portal' right>\n            <NavItem onClick={this.handleHomeClick.bind(this)}>Home</NavItem>\n            <NavItem onClick={this.handleAdminClick.bind(this)}>Admin</NavItem>\n          </Navbar>\n        </nav>\n        {shouldDisplayAdmin ? <Admin/> : \n        (<div>\n          <header className=\"App-header\">\n            <img src={Logo} alt=\"\"/>\n          </header>\n          <div className=\"App\">{shouldDisplayCheckInOut ? <CheckInOut currentId={this.state.id} cancelClickHandler={this.handleCancelClick.bind(this)}/> : <Form enterClickHandler={this.handleEnterClick.bind(this)}/>}</div>\n        </div>)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}