{"version":3,"sources":["aubdaycare.png","Form.js","firebase.js","Confirmation.js","CheckInOut.js","Graphs.js","PersonInfo.js","Lookup.js","ModifyForm.js","Modify.js","AdminTabs.js","Admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","e","setState","target","value","console","log","enterClickHandler","react_default","a","createElement","lib","offset","s","m","l","label","onChange","handleInputChange","bind","waves","onClick","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Confirmation","database","ref","update","time","type","action","CheckInOut","checkIn","confirmed","person_name","person_time","person_id","current_time","_this2","currentId","on","snapshot","member","val","memberName","first_name","last_name","lastAction","latest_check","cancelClickHandler","currentTimestamp","Date","toLocaleString","isCheckIn","isConfirmed","className","src_Confirmation","checkInOutHandler","Graphs","react_chartkick_esm","data","PersonInfo","name","address","phone","emergency_contact_name","emergency_contact_relationship","group","contactInfo","contact_info","emergencyContact","emergency_contact","street_address","city","postal_code","relationship","backClickHandler","Lookup","displayInfo","shouldDisplayInfo","src_PersonInfo","handleBackClick","handleSearchClick","ModifyForm","latestCheck","emergency_contact_first_name","emergency_contact_last_name","emergency_contact_phone","latest_check_type","latest_check_time","defaultValue","disabled","handleFirstNameChange","handleLastNameChange","handleStreetAddressChange","handleCityChange","handleStateChange","handlePostalCodeChange","handleEmergencyFirstNameChange","handleEmergencyLastNameChange","handleEmergencyPhoneChange","handleEmergencyRelationshipChange","handleLatestCheckTypeChange","handleLatestCheckTimeChange","handleSave","Modify","members","displayForm","newState","push","check_in_out","check_in_out_time","_this3","shouldDisplayForm","src_ModifyForm","data-field","map","handleEditClick","AdminTabs","title","active","src_Modify","src_Lookup","src_Graphs","Admin","src_AdminTabs","App","displayCheckInOut","displayAdmin","idValue","shouldDisplayCheckInOut","shouldDisplayAdmin","brand","right","handleHomeClick","handleAdminClick","src_Admin","src","Logo","alt","src_CheckInOut","handleCancelClick","src_Form","handleEnterClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b597811f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aubdaycare.aaca6e2a.png\";","import React, {Component} from 'react';\nimport {Row, Input, Col, Button} from 'react-materialize';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            id: ''\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n    }\n\n    enterClickHandler() {\n        var id = this.state.id;\n        console.log('entered id:  ', id);\n        this.props.enterClickHandler(this.state.id);\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Please enter your ID to check in or check out. </h4>\n                <Row>\n                    <Col offset=\"s3 m3 l4\"></Col>\n                    <Input s={6} m={6} l={4} label=\"Student or Teacher ID\" onChange={this.handleInputChange.bind(this)} />\n                </Row>\n                <Row>\n                    <Button waves='light' onClick={this.enterClickHandler.bind(this)}>Enter</Button>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Form; ","import firebase from 'firebase';\n\n// Initialize Firebase\nconst config = {\napiKey: \"AIzaSyDN3-czdUpwlkRPjKhfTOczV_gHU7TN1CI\",\nauthDomain: \"daycare-b176c.firebaseapp.com\",\ndatabaseURL: \"https://daycare-b176c.firebaseio.com\",\nprojectId: \"daycare-b176c\",\nstorageBucket: \"daycare-b176c.appspot.com\",\nmessagingSenderId: \"88878176556\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase; ","import React, { Component } from 'react';\nimport firebase from './firebase.js';\n\nclass Confirmation extends Component {\n    componentDidMount() {\n        firebase.database().ref('daycare/' + this.props.id + '/latest_check').update({\n            'time': this.props.time, \n            'type': this.props.action\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Thank you! You have been successfully <b>checked {this.props.action}!</b></h4>\n            </div>\n        );\n    }\n}\n\nexport default Confirmation; ","import React, { Component } from 'react';\nimport { Button } from 'react-materialize';\nimport Confirmation from './Confirmation.js';\nimport firebase from './firebase.js'\n\nclass CheckInOut extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            checkIn: true,\n            confirmed: false,\n            action: '',\n            person_name: '',\n            person_time: '', \n            person_id: '',\n            current_time: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setState({person_id : this.props.currentId});\n        const memberRef = firebase.database().ref('daycare/' + this.props.currentId);\n        memberRef.on('value',(snapshot) => {\n            let member = snapshot.val();\n            let memberName = member.first_name + ' ' + member.last_name;\n            let lastAction = member.latest_check.type;\n            if(lastAction === 'in') {\n                this.setState({\n                    checkIn: true, \n                    person_name: memberName,\n                    person_time: member.latest_check.time\n                });\n            } else if (lastAction === 'out') {\n                this.setState({\n                    checkIn: false, \n                    person_name: memberName,\n                    person_time: member.latest_check.time\n                })\n            }\n        });\n    }\n\n    cancelClickHandler() {\n        this.props.cancelClickHandler();\n    }\n\n    checkInOutHandler() {\n        // For now console logging -- will obviously store something in the DB\n        var currentTimestamp = new Date().toLocaleString();\n\n        if(this.state.checkIn) {\n            console.log('Check OUT Recorded');\n            this.setState({action: 'out'});\n            console.log('Checked OUT at ' + currentTimestamp);\n        } else {\n            console.log('Check IN Recorded');\n            this.setState({action: 'in'});\n            console.log('Checked IN at ' + currentTimestamp);\n        }\n\n        this.setState({confirmed: true, current_time: currentTimestamp});\n    }\n\n    render() {\n        const isCheckIn = this.state.checkIn;\n        const isConfirmed = this.state.confirmed;\n        \n        return(\n            <div className='CheckInOut'>\n            {isConfirmed ? <Confirmation action={this.state.action} time={this.state.current_time} id={this.state.person_id}/>\n                :\n                <div className='PersonInfo'>\n                    <h4>ID NUMBER: {this.props.currentId}</h4>\n                    <h4>Name: {this.state.person_name}</h4>\n                    {isCheckIn ? <h5>Last Check In Time: {this.state.person_time}</h5> : <h5>Last Check Out Time: {this.state.person_time}</h5>}\n                    <Button className='red lighten-2' waves='light' onClick={this.cancelClickHandler.bind(this)}>CANCEL</Button> {isCheckIn ? <Button waves='light' onClick={this.checkInOutHandler.bind(this)}>CHECKOUT</Button> : <Button waves='light' onClick={this.checkInOutHandler.bind(this)}>CHECKIN</Button>}\n                </div>}       \n            </div>\n        );\n    }\n}\n\nexport default CheckInOut;","import React, { Component } from 'react';\nimport { Row, Col, Icon } from 'react-materialize';\nimport { LineChart } from 'react-chartkick';\nimport data from './chart_data.json';\n\nclass Graphs extends Component {\n    render() {\n        return(\n            <div>\n                <h4>Check In and Check Out Trends</h4>\n                <Row>\n                    <Col offset=\"s0 m1 l1\" s={6} m={8} l={8}><LineChart data={data}/></Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Graphs;\n\n","import React, { Component } from 'react'; \nimport { Button } from 'react-materialize';\nimport firebase from './firebase.js'; \n\nclass PersonInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            name: '',\n            address:'',\n            phone: '',\n            emergency_contact_name: '',\n            emergency_contact_relationship: '',\n            group: ''\n        };\n    }\n\n    componentDidMount() {\n        this.setState({id: this.props.id});\n        const memberRef = firebase.database().ref('daycare/' + this.props.id);\n        memberRef.on('value', (snapshot) => {\n            let member = snapshot.val();\n            let contactInfo = member.contact_info;\n            let emergencyContact = member.emergency_contact; \n            this.setState({\n                name: member.first_name + ' ' + member.last_name,\n                address: contactInfo.street_address + ' ' + contactInfo.city + ' ' + contactInfo.state + ' ' + contactInfo.postal_code,\n                phone: contactInfo.phone,\n                emergency_contact_name: emergencyContact.first_name + ' ' + emergencyContact.last_name,\n                emergency_contact_relationship: emergencyContact.relationship\n            });\n        });\n    }\n\n    backClickHandler() {\n        this.props.backClickHandler();\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Information</h4>\n                <h5>Name: {this.state.name}</h5>\n                <h5>Address: {this.state.address}</h5>\n                <h5>Phone: {this.state.phone}</h5>\n                <h4>Emergency Information</h4>\n                <h5>Emergency Contact: {this.state.emergency_contact_name}</h5>\n                <h5>Emergency Phone: {this.state.phone}</h5>\n                <h5>Relationship: {this.state.emergency_contact_relationship}</h5>\n                <Button waves='light' onClick={this.backClickHandler.bind(this)}>Back</Button>\n            </div>\n        );\n    }\n}\n\nexport default PersonInfo; ","import React, { Component } from 'react';\nimport { Row, Col, Input, Button } from 'react-materialize';\nimport PersonInfo from './PersonInfo';\n\nclass Lookup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            id: '',\n            displayInfo: false\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n        console.log(\"ID VAL: \" + e.target.value);\n    }\n\n    handleSearchClick() {\n        this.setState({displayInfo: true});\n    }\n\n    handleBackClick() {\n        this.setState({id: '', displayInfo: false});\n    }\n\n    render() {\n        const shouldDisplayInfo = this.state.displayInfo;\n\n        return(\n            <div className=\"Lookup\">\n                {shouldDisplayInfo ? <PersonInfo backClickHandler={this.handleBackClick.bind(this)} id={this.state.id}/> : \n                    <div>\n                        <h4>Please enter a student or teacher ID to retrieve information.</h4>\n                        <Row>\n                            <Col offset=\"s3 m3 l4\"></Col>\n                            <Input s={6} m={6} l={4} label=\"Student or Teacher ID\" onChange={this.handleInputChange.bind(this)} />\n                        </Row>\n                        <Row>\n                            <Button waves='light' onClick={this.handleSearchClick.bind(this)}>Search</Button>\n                        </Row>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Lookup;","import React, { Component } from 'react';\nimport { Row, Input, Button } from 'react-materialize';\nimport firebase from './firebase.js';\n\nclass ModifyForm extends Component {\n    componentWillMount() {\n        const memberRef = firebase.database().ref('daycare/' + this.props.currentId);\n        memberRef.on('value', (snapshot) => {\n            let member = snapshot.val();\n            let contactInfo = member.contact_info;\n            let emergencyContact = member.emergency_contact;\n            let latestCheck = member.latest_check;\n            this.setState({\n                id: member.id, \n                first_name: member.first_name,\n                last_name: member.last_name,\n                street_address: contactInfo.street_address, \n                city: contactInfo.city, \n                state: contactInfo.state, \n                postal_code: contactInfo.postal_code, \n                emergency_contact_first_name: emergencyContact.first_name,\n                emergency_contact_last_name: emergencyContact.last_name,\n                emergency_contact_phone: contactInfo.phone,\n                emergency_contact_relationship: emergencyContact.relationship,\n                latest_check_type: latestCheck.type,\n                latest_check_time: latestCheck.time\n            });\n        });\n    }\n\n    handleFirstNameChange(e){\n        this.setState({first_name: e.target.value});\n    }\n\n    handleLastNameChange(e){\n        this.setState({last_name: e.target.value});\n    }\n\n    handleStreetAddressChange(e){\n        this.setState({street_address: e.target.value});\n    }\n\n    handleCityChange(e){\n        this.setState({city: e.target.value});\n    }\n\n    handleStateChange(e){\n        this.setState({state: e.target.value});\n    }\n\n    handlePostalCodeChange(e) {\n        this.setState({postal_code: e.target.value});\n    }\n\n    handleEmergencyFirstNameChange(e){\n        this.setState({emergency_contact_first_name: e.target.value});\n    }\n\n    handleEmergencyLastNameChange(e){\n        this.setState({emergency_contact_last_name: e.target.value});\n    }\n\n    handleEmergencyRelationshipChange(e){\n        this.setState({emergency_contact_relationship: e.target.value});\n    }\n\n    handleEmergencyPhoneChange(e){\n        this.setState({emergency_contact_phone: e.target.value});\n    }\n\n    handleLatestCheckTypeChange(e){\n        this.setState({latest_check_type: e.target.value});\n    }\n\n    handleLatestCheckTimeChange(e){\n        this.setState({latest_check_time: e.target.value});\n    }\n\n    handleSave() {\n        // update names \n        firebase.database().ref('daycare/' + this.state.id).update({\n            first_name: this.state.first_name, \n            last_name: this.state.last_name\n        });\n\n        // update contact info\n        firebase.database().ref('daycare/' + this.state.id + '/contact_info').update({\n            street_address: this.state.street_address,\n            city: this.state.city,\n            state: this.state.state,\n            postal_code: this.state.postal_code,\n            phone: this.state.emergency_contact_phone\n        });\n\n        // update emergency contact info\n        firebase.database().ref('daycare/' + this.state.id + '/emergency_contact').update({\n            first_name: this.state.emergency_contact_first_name,\n            last_name: this.state.emergency_contact_last_name,\n            relationship: this.state.emergency_contact_relationship\n        });\n\n        // update latest check\n        firebase.database().ref('daycare/' + this.state.id + '/latest_check').update({\n            type: this.state.latest_check_type,\n            time: this.state.latest_check_time\n        });\n\n        // Go back\n        this.props.backClickHandler();\n    }\n\n    render() {\n        return(\n            <div className=\"Modify-form\">\n            <Row>\n                <h4>Information</h4>\n                <Input s={12} label=\"ID\" defaultValue={this.state.id} disabled />\n                <Input s={6} label=\"First Name\" defaultValue={this.state.first_name} onChange={this.handleFirstNameChange.bind(this)}/>\n                <Input s={6} label=\"Last Name\" defaultValue={this.state.last_name} onChange={this.handleLastNameChange.bind(this)}/>\n                <Input s={12} label=\"Street Address\" defaultValue={this.state.street_address} onChange={this.handleStreetAddressChange.bind(this)}/>\n                <Input s={6} label=\"City\" defaultValue={this.state.city} onChange={this.handleCityChange.bind(this)}/>\n                <Input s={3} label=\"State\" defaultValue={this.state.state} onChange={this.handleStateChange.bind(this)}/>\n                <Input s={3} label=\"Postal Code\" defaultValue={this.state.postal_code} onChange={this.handlePostalCodeChange.bind(this)}/>\n            </Row>\n            <Row>\n                <h4>Emergency Contact</h4>\n                <Input s={6} label=\"Emergency Contact First Name\" defaultValue={this.state.emergency_contact_first_name} onChange={this.handleEmergencyFirstNameChange.bind(this)}/>\n                <Input s={6} label=\"Emergency Contact Last Name\" defaultValue={this.state.emergency_contact_last_name} onChange={this.handleEmergencyLastNameChange.bind(this)}/>\n                <Input s={6} label=\"Emergency Contact Phone\" defaultValue={this.state.emergency_contact_phone} onChange={this.handleEmergencyPhoneChange.bind(this)}/>\n                <Input s={6} label=\"Emergency Contact Relationship\" defaultValue={this.state.emergency_contact_relationship} onChange={this.handleEmergencyRelationshipChange.bind(this)}/>\n            </Row>\n            <Row>\n                <h4>Last Check In / Out</h4>\n                <Input s={6} label=\"Check In or Out\" type='select' defaultValue={this.state.latest_check_type} onChange={this.handleLatestCheckTypeChange.bind(this)}>\n                    <option value='in'>Check In</option>\n                    <option value='out'>Check Out</option>\n                </Input>\n                <Input s={6} label=\"Time\" defaultValue={this.state.latest_check_time} onChange={this.handleLatestCheckTimeChange.bind(this)}/>\n            </Row>\n            <Button className='red lighten-2' waves='light' onClick={this.props.backClickHandler}>Back</Button>  <Button waves='light' onClick={this.handleSave.bind(this)}>Save</Button>\n            </div>\n        );\n    }\n}\n\nexport default ModifyForm;","import React, { Component } from 'react';\nimport { Table, Button } from 'react-materialize';\nimport firebase from './firebase.js';\nimport ModifyForm from './ModifyForm.js';\n\nclass Modify extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            members: [], \n            displayForm: false, \n            currentId: ''\n        }\n    }\n\n    componentDidMount() {\n        const daycareRef = firebase.database().ref('daycare/');\n        daycareRef.on('value', (snapshot) => {\n            let members = snapshot.val();\n            let newState = [];\n            for(let member in members) {\n                newState.push({\n                    id: members[member].id, \n                    name: members[member].first_name + ' ' + members[member].last_name,\n                    check_in_out: members[member].latest_check.type, \n                    check_in_out_time: members[member].latest_check.time \n                })\n            }\n            this.setState({members: newState});\n        });\n    }\n\n    handleEditClick(id) {\n        this.setState({displayForm: true, currentId: id});\n    }\n\n    handleBackClick() {\n        this.setState({displayForm: false});\n    }\n\n    render() {\n        const shouldDisplayForm = this.state.displayForm;\n        return(\n            <div>\n                { shouldDisplayForm ? \n                <ModifyForm backClickHandler={this.handleBackClick.bind(this)} currentId={this.state.currentId}/> : \n                <Table>\n                <thead>\n                    <tr>\n                    <th data-field=\"id\">ID</th>\n                    <th data-field=\"name\">Name</th>\n                    <th data-field=\"check-in-out\">Check In / Out</th>\n                    <th data-field=\"time\">Time</th>\n                    <th data-field=\"modify\">Modify</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.members.map((member) => {\n                        var currentId = member.id;\n                        return(\n                            <tr>\n                                <td>{member.id}</td>\n                                <td>{member.name}</td>\n                                <td>check {member.check_in_out}</td>\n                                <td>{member.check_in_out_time}</td>\n                                <td><Button waves='light' onClick={this.handleEditClick.bind(this, currentId)}>Edit</Button></td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n                </Table>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Modify; ","import React, { Component } from 'react';\nimport { Tab, Tabs, Row } from 'react-materialize';\nimport Graphs from './Graphs.js';\nimport Lookup from './Lookup.js';\nimport Modify from './Modify.js';\n\nclass AdminTabs extends Component {\n    render() {\n        return(\n            <div className=\"Admin-tabs\">\n            <Row>\n                <Tabs className='tab-demo z-depth-1'>\n                    <Tab title=\"History\" active><Modify/></Tab>\n                    <Tab title=\"Lookup\"><Lookup/></Tab>\n                    <Tab title=\"Dashboard\"><Graphs/></Tab>\n                </Tabs>\n            </Row>\n            </div>\n        );\n    }\n}\n\nexport default AdminTabs;","import React, { Component } from 'react';\nimport AdminTabs from './AdminTabs';\n\nclass Admin extends Component {\n    render() {\n        return(\n            <div>\n                <AdminTabs/>\n            </div>\n        );\n    }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport {Navbar, NavItem} from 'react-materialize';\nimport Form from './Form.js';\nimport CheckInOut from './CheckInOut.js';\nimport Admin from './Admin.js';\nimport Logo from './aubdaycare.png';\nimport './App.css';\nimport firebase from './firebase.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayCheckInOut: false,\n      displayAdmin: false,\n      id:''\n    }\n  }\n\n  handleEnterClick(idValue) {\n    this.setState({displayCheckInOut: true, id:idValue});\n  }\n\n  handleCancelClick() {\n    this.setState({displayCheckInOut: false, displayAdmin: false, id: ''});\n  }\n\n  handleAdminClick() {\n    this.setState({displayAdmin:true});\n  }\n\n  handleHomeClick() {\n    this.setState({displayCheckInOut: false, displayAdmin: false});\n  }\n\n  render() {\n    const shouldDisplayCheckInOut = this.state.displayCheckInOut;\n    const shouldDisplayAdmin = this.state.displayAdmin;\n    var id = '';\n    return (\n      <div>\n        <nav>\n          <Navbar className=\"Nav\" brand='Day Care Portal' right>\n            <NavItem onClick={this.handleHomeClick.bind(this)}>Home</NavItem>\n            <NavItem onClick={this.handleAdminClick.bind(this)}>Admin</NavItem>\n          </Navbar>\n        </nav>\n        {shouldDisplayAdmin ? <Admin/> : \n        (<div>\n          <header className=\"App-header\">\n            <img src={Logo} alt=\"\"/>\n          </header>\n          <div className=\"App\">{shouldDisplayCheckInOut ? <CheckInOut currentId={this.state.id} cancelClickHandler={this.handleCancelClick.bind(this)}/> : <Form enterClickHandler={this.handleEnterClick.bind(this)}/>}</div>\n        </div>)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}