{"version":3,"sources":["aubdaycare.png","Form.js","firebase.js","Confirmation.js","CheckInOut.js","Graphs.js","PersonInfo.js","Lookup.js","ModifyForm.js","Modify.js","AdminTabs.js","Admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","e","setState","target","value","console","log","enterClickHandler","react_default","a","createElement","lib","offset","s","m","l","label","onChange","handleInputChange","bind","waves","onClick","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Confirmation","database","ref","set","check_by","time","type","action","CheckInOut","checkIn","confirmed","person_name","person_time","person_id","current_time","_this2","currentId","on","snapshot","member","val","memberName","first_name","last_name","lastAction","latest_check","cancelClickHandler","currentTimestamp","Date","toLocaleString","isCheckIn","isConfirmed","className","src_Confirmation","checkInOutHandler","Graphs","react_chartkick_esm","data","PersonInfo","name","address","phone","emergency_contact_name","emergency_contact_relationship","group","contactInfo","contact_info","emergencyContact","emergency_contact","street_address","city","postal_code","relationship","backClickHandler","Lookup","displayInfo","shouldDisplayInfo","src_PersonInfo","handleBackClick","handleSearchClick","ModifyForm","latestCheck","emergency_contact_first_name","emergency_contact_last_name","emergency_contact_phone","latest_check_type","latest_check_time","update","defaultValue","disabled","handleFirstNameChange","handleLastNameChange","handleStreetAddressChange","handleCityChange","handleStateChange","handlePostalCodeChange","handleEmergencyFirstNameChange","handleEmergencyLastNameChange","handleEmergencyPhoneChange","handleEmergencyRelationshipChange","handleLatestCheckTypeChange","handleLatestCheckTimeChange","handleSave","Modify","members","displayForm","newState","push","check_in_out","check_in_out_time","_this3","shouldDisplayForm","src_ModifyForm","data-field","map","handleEditClick","AdminTabs","title","active","src_Lookup","src_Modify","src_Graphs","Admin","src_AdminTabs","App","displayCheckInOut","displayAdmin","idValue","shouldDisplayCheckInOut","shouldDisplayAdmin","brand","right","handleHomeClick","handleAdminClick","src_Admin","src","Logo","alt","src_CheckInOut","handleCancelClick","src_Form","handleEnterClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d35a984c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aubdaycare.aaca6e2a.png\";","import React, {Component} from 'react';\nimport {Row, Input, Col, Button} from 'react-materialize';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            id: ''\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n    }\n\n    enterClickHandler() {\n        var id = this.state.id;\n        console.log('entered id:  ', id);\n        this.props.enterClickHandler(this.state.id);\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Please enter your ID to check in or check out. </h4>\n                <Row>\n                    <Col offset=\"s3 m3 l4\"></Col>\n                    <Input s={6} m={6} l={4} label=\"Student or Teacher ID\" onChange={this.handleInputChange.bind(this)} />\n                </Row>\n                <Row>\n                    <Button waves='light' onClick={this.enterClickHandler.bind(this)}>Enter</Button>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Form; ","import firebase from 'firebase';\n\n// Initialize Firebase\nconst config = {\napiKey: \"AIzaSyDN3-czdUpwlkRPjKhfTOczV_gHU7TN1CI\",\nauthDomain: \"daycare-b176c.firebaseapp.com\",\ndatabaseURL: \"https://daycare-b176c.firebaseio.com\",\nprojectId: \"daycare-b176c\",\nstorageBucket: \"daycare-b176c.appspot.com\",\nmessagingSenderId: \"88878176556\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase; ","import React, { Component } from 'react';\nimport firebase from './firebase.js';\n\nclass Confirmation extends Component {\n    componentDidMount() {\n        firebase.database().ref('daycare/' + this.props.id + '/latest_check').set({\n            'check_by': this.props.id, // TODO: This isn't quite working, need to be able to link parent and children\n            'time': this.props.time, \n            'type': this.props.action\n        });\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Thank you! You have been successfully <b>checked {this.props.action}!</b></h4>\n            </div>\n        );\n    }\n}\n\nexport default Confirmation; ","import React, { Component } from 'react';\nimport { Button } from 'react-materialize';\nimport Confirmation from './Confirmation.js';\nimport firebase from './firebase.js'\n\nclass CheckInOut extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            checkIn: true,\n            confirmed: false,\n            action: '',\n            person_name: '',\n            person_time: '', \n            person_id: '',\n            current_time: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setState({person_id : this.props.currentId});\n        const memberRef = firebase.database().ref('daycare/' + this.props.currentId);\n        memberRef.on('value',(snapshot) => {\n            let member = snapshot.val();\n            let memberName = member.first_name + ' ' + member.last_name;\n            let lastAction = member.latest_check.type;\n            if(lastAction === 'in') {\n                this.setState({\n                    checkIn: true, \n                    person_name: memberName,\n                    person_time: member.latest_check.time\n                });\n            } else if (lastAction === 'out') {\n                this.setState({\n                    checkIn: false, \n                    person_name: memberName,\n                    person_time: member.latest_check.time\n                })\n            }\n        });\n    }\n\n    cancelClickHandler() {\n        this.props.cancelClickHandler();\n    }\n\n    checkInOutHandler() {\n        // For now console logging -- will obviously store something in the DB\n        var currentTimestamp = new Date().toLocaleString();\n\n        if(this.state.checkIn) {\n            console.log('Check OUT Recorded');\n            this.setState({action: 'out'});\n            console.log('Checked OUT at ' + currentTimestamp);\n        } else {\n            console.log('Check IN Recorded');\n            this.setState({action: 'in'});\n            console.log('Checked IN at ' + currentTimestamp);\n        }\n\n        this.setState({confirmed: true, current_time: currentTimestamp});\n    }\n\n    render() {\n        const isCheckIn = this.state.checkIn;\n        const isConfirmed = this.state.confirmed;\n        \n        return(\n            <div className='CheckInOut'>\n            {isConfirmed ? <Confirmation action={this.state.action} time={this.state.current_time} id={this.state.person_id}/>\n                :\n                <div className='PersonInfo'>\n                    <h4>ID NUMBER: {this.props.currentId}</h4>\n                    <h4>Name: {this.state.person_name}</h4>\n                    {isCheckIn ? <h5>Last Check In Time: {this.state.person_time}</h5> : <h5>Last Check Out Time: {this.state.person_time}</h5>}\n                    <Button className='red lighten-2' waves='light' onClick={this.cancelClickHandler.bind(this)}>CANCEL</Button> {isCheckIn ? <Button waves='light' onClick={this.checkInOutHandler.bind(this)}>CHECKOUT</Button> : <Button waves='light' onClick={this.checkInOutHandler.bind(this)}>CHECKIN</Button>}\n                </div>}       \n            </div>\n        );\n    }\n}\n\nexport default CheckInOut;","import React, { Component } from 'react';\nimport { Row, Col, Icon } from 'react-materialize';\nimport { LineChart } from 'react-chartkick';\nimport data from './chart_data.json';\n\nclass Graphs extends Component {\n    render() {\n        return(\n            <div>\n                <h4>Check In and Check Out Trends</h4>\n                <Row>\n                    <Col offset=\"s0 m1 l1\" s={6} m={8} l={8}><LineChart data={data}/></Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Graphs;\n\n","import React, { Component } from 'react'; \nimport { Button } from 'react-materialize';\nimport firebase from './firebase.js'; \n\nclass PersonInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            name: '',\n            address:'',\n            phone: '',\n            emergency_contact_name: '',\n            emergency_contact_relationship: '',\n            group: ''\n        };\n    }\n\n    componentDidMount() {\n        this.setState({id: this.props.id});\n        const memberRef = firebase.database().ref('daycare/' + this.props.id);\n        memberRef.on('value', (snapshot) => {\n            let member = snapshot.val();\n            let contactInfo = member.contact_info;\n            let emergencyContact = member.emergency_contact; \n            this.setState({\n                name: member.first_name + ' ' + member.last_name,\n                address: contactInfo.street_address + ' ' + contactInfo.city + ' ' + contactInfo.state + ' ' + contactInfo.postal_code,\n                phone: contactInfo.phone,\n                emergency_contact_name: emergencyContact.first_name + ' ' + emergencyContact.last_name,\n                emergency_contact_relationship: emergencyContact.relationship\n            });\n        });\n    }\n\n    backClickHandler() {\n        this.props.backClickHandler();\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Information</h4>\n                <h5>Name: {this.state.name}</h5>\n                <h5>Address: {this.state.address}</h5>\n                <h5>Phone: {this.state.phone}</h5>\n                <h4>Emergency Information</h4>\n                <h5>Emergency Contact: {this.state.emergency_contact_name}</h5>\n                <h5>Emergency Phone: {this.state.phone}</h5>\n                <h5>Relationship: {this.state.emergency_contact_relationship}</h5>\n                <Button waves='light' onClick={this.backClickHandler.bind(this)}>Back</Button>\n            </div>\n        );\n    }\n}\n\nexport default PersonInfo; ","import React, { Component } from 'react';\nimport { Row, Col, Input, Button } from 'react-materialize';\nimport PersonInfo from './PersonInfo';\n\nclass Lookup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            id: '',\n            displayInfo: false\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n        console.log(\"ID VAL: \" + e.target.value);\n    }\n\n    handleSearchClick() {\n        this.setState({displayInfo: true});\n    }\n\n    handleBackClick() {\n        this.setState({id: '', displayInfo: false});\n    }\n\n    render() {\n        const shouldDisplayInfo = this.state.displayInfo;\n\n        return(\n            <div className=\"Lookup\">\n                {shouldDisplayInfo ? <PersonInfo backClickHandler={this.handleBackClick.bind(this)} id={this.state.id}/> : \n                    <div>\n                        <h4>Please enter a student or teacher ID to retrieve information.</h4>\n                        <Row>\n                            <Col offset=\"s3 m3 l4\"></Col>\n                            <Input s={6} m={6} l={4} label=\"Student or Teacher ID\" onChange={this.handleInputChange.bind(this)} />\n                        </Row>\n                        <Row>\n                            <Button waves='light' onClick={this.handleSearchClick.bind(this)}>Search</Button>\n                        </Row>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Lookup;","import React, { Component } from 'react';\nimport { Row, Input, Button } from 'react-materialize';\nimport firebase from './firebase.js';\n\nclass ModifyForm extends Component {\n    componentWillMount() {\n        console.log('oiddddd:::' + this.props.currentId);\n        const memberRef = firebase.database().ref('daycare/' + this.props.currentId);\n        memberRef.on('value', (snapshot) => {\n            let member = snapshot.val();\n            let contactInfo = member.contact_info;\n            let emergencyContact = member.emergency_contact;\n            let latestCheck = member.latest_check;\n            this.setState({\n                id: member.id, \n                first_name: member.first_name,\n                last_name: member.last_name,\n                street_address: contactInfo.street_address, \n                city: contactInfo.city, \n                state: contactInfo.state, \n                postal_code: contactInfo.postal_code, \n                emergency_contact_first_name: emergencyContact.first_name,\n                emergency_contact_last_name: emergencyContact.last_name,\n                emergency_contact_phone: contactInfo.phone,\n                emergency_contact_relationship: emergencyContact.relationship,\n                latest_check_type: latestCheck.type,\n                latest_check_time: latestCheck.time\n            });\n        });\n    }\n\n    handleFirstNameChange(e){\n        this.setState({first_name: e.target.value});\n    }\n\n    handleLastNameChange(e){\n        this.setState({last_name: e.target.value});\n    }\n\n    handleStreetAddressChange(e){\n        this.setState({street_address: e.target.value});\n    }\n\n    handleCityChange(e){\n        this.setState({city: e.target.value});\n    }\n\n    handleStateChange(e){\n        this.setState({state: e.target.value});\n    }\n\n    handlePostalCodeChange(e) {\n        this.setState({postal_code: e.target.value});\n    }\n\n    handleEmergencyFirstNameChange(e){\n        this.setState({emergency_contact_first_name: e.target.value});\n    }\n\n    handleEmergencyLastNameChange(e){\n        this.setState({emergency_contact_last_name: e.target.value});\n    }\n\n    handleEmergencyRelationshipChange(e){\n        this.setState({emergency_contact_relationship: e.target.value});\n    }\n\n    handleEmergencyPhoneChange(e){\n        this.setState({emergency_contact_phone: e.target.value});\n    }\n\n    handleLatestCheckTypeChange(e){\n        this.setState({latest_check_type: e.target.value});\n    }\n\n    handleLatestCheckTimeChange(e){\n        this.setState({latest_check_time: e.target.value});\n    }\n\n    handleSave() {\n        // update names \n        firebase.database().ref('daycare/' + this.state.id).update({\n            first_name: this.state.first_name, \n            last_name: this.state.last_name\n        });\n\n        // update contact info\n        firebase.database().ref('daycare/' + this.state.id + '/contact_info').update({\n            street_address: this.state.street_address,\n            city: this.state.city,\n            state: this.state.state,\n            postal_code: this.state.postal_code,\n            phone: this.state.emergency_contact_phone\n        });\n\n        // update emergency contact info\n        firebase.database().ref('daycare/' + this.state.id + '/emergency_contact').update({\n            first_name: this.state.emergency_contact_first_name,\n            last_name: this.state.emergency_contact_last_name,\n            relationship: this.state.emergency_contact_relationship\n        });\n\n        // update latest check\n        firebase.database().ref('daycare/' + this.state.id + '/latest_check').update({\n            type: this.state.latest_check_type,\n            time: this.state.latest_check_time\n        });\n\n        // Go back\n        this.props.backClickHandler();\n    }\n\n    render() {\n        return(\n            <div className=\"Modify-form\">\n            <Row>\n                <h4>Information</h4>\n                <Input s={12} label=\"ID\" defaultValue={this.state.id} disabled />\n                <Input s={6} label=\"First Name\" defaultValue={this.state.first_name} onChange={this.handleFirstNameChange.bind(this)}/>\n                <Input s={6} label=\"Last Name\" defaultValue={this.state.last_name} onChange={this.handleLastNameChange.bind(this)}/>\n                <Input s={12} label=\"Street Address\" defaultValue={this.state.street_address} onChange={this.handleStreetAddressChange.bind(this)}/>\n                <Input s={6} label=\"City\" defaultValue={this.state.city} onChange={this.handleCityChange.bind(this)}/>\n                <Input s={3} label=\"State\" defaultValue={this.state.state} onChange={this.handleStateChange.bind(this)}/>\n                <Input s={3} label=\"Postal Code\" defaultValue={this.state.postal_code} onChange={this.handlePostalCodeChange.bind(this)}/>\n            </Row>\n            <Row>\n                <h4>Emergency Contact</h4>\n                <Input s={6} label=\"Emergency Contact First Name\" defaultValue={this.state.emergency_contact_first_name} onChange={this.handleEmergencyFirstNameChange.bind(this)}/>\n                <Input s={6} label=\"Emergency Contact Last Name\" defaultValue={this.state.emergency_contact_last_name} onChange={this.handleEmergencyLastNameChange.bind(this)}/>\n                <Input s={6} label=\"Emergency Contact Phone\" defaultValue={this.state.emergency_contact_phone} onChange={this.handleEmergencyPhoneChange.bind(this)}/>\n                <Input s={6} label=\"Emergency Contact Relationship\" defaultValue={this.state.emergency_contact_relationship} onChange={this.handleEmergencyRelationshipChange.bind(this)}/>\n            </Row>\n            <Row>\n                <h4>Last Check In / Out</h4>\n                <Input s={6} label=\"Check In or Out\" type='select' defaultValue={this.state.latest_check_type} onChange={this.handleLatestCheckTypeChange.bind(this)}>\n                    <option value='in'>Check In</option>\n                    <option value='out'>Check Out</option>\n                </Input>\n                <Input s={6} label=\"Time\" defaultValue={this.state.latest_check_time} onChange={this.handleLatestCheckTimeChange.bind(this)}/>\n            </Row>\n            <Button className='red lighten-2' waves='light' onClick={this.props.backClickHandler}>Back</Button>  <Button waves='light' onClick={this.handleSave.bind(this)}>Save</Button>\n            </div>\n        );\n    }\n}\n\nexport default ModifyForm;","import React, { Component } from 'react';\nimport { Table, Button } from 'react-materialize';\nimport firebase from './firebase.js';\nimport ModifyForm from './ModifyForm.js';\n\nclass Modify extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            members: [], \n            displayForm: false, \n            currentId: ''\n        }\n    }\n\n    componentDidMount() {\n        const daycareRef = firebase.database().ref('daycare/');\n        daycareRef.on('value', (snapshot) => {\n            let members = snapshot.val();\n            let newState = [];\n            for(let member in members) {\n                newState.push({\n                    id: members[member].id, \n                    name: members[member].first_name + ' ' + members[member].last_name,\n                    check_in_out: members[member].latest_check.type, \n                    check_in_out_time: members[member].latest_check.time \n                })\n            }\n            this.setState({members: newState});\n        });\n    }\n\n    handleEditClick(id) {\n        this.setState({displayForm: true, currentId: id});\n    }\n\n    handleBackClick() {\n        this.setState({displayForm: false});\n    }\n\n    render() {\n        const shouldDisplayForm = this.state.displayForm;\n        return(\n            <div>\n                { shouldDisplayForm ? \n                <ModifyForm backClickHandler={this.handleBackClick.bind(this)} currentId={this.state.currentId}/> : \n                <Table>\n                <thead>\n                    <tr>\n                    <th data-field=\"id\">ID</th>\n                    <th data-field=\"name\">Name</th>\n                    <th data-field=\"check-in-out\">Check In / Out</th>\n                    <th data-field=\"time\">Time</th>\n                    <th data-field=\"modify\">Modify</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.members.map((member) => {\n                        var currentId = member.id;\n                        return(\n                            <tr>\n                                <td>{member.id}</td>\n                                <td>{member.name}</td>\n                                <td>check {member.check_in_out}</td>\n                                <td>{member.check_in_out_time}</td>\n                                <td><Button waves='light' onClick={this.handleEditClick.bind(this, currentId)}>Edit</Button></td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n                </Table>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Modify; ","import React, { Component } from 'react';\nimport { Tab, Tabs, Row } from 'react-materialize';\nimport Graphs from './Graphs.js';\nimport Lookup from './Lookup.js';\nimport Modify from './Modify.js';\n\nclass AdminTabs extends Component {\n    render() {\n        return(\n            <div className=\"Admin-tabs\">\n            <Row>\n                <Tabs className='tab-demo z-depth-1'>\n                    <Tab title=\"Lookup\" active><Lookup/></Tab>\n                    <Tab title=\"Modify\"><Modify/></Tab>\n                    <Tab title=\"Dashboard\"><Graphs/></Tab>\n                </Tabs>\n            </Row>\n            </div>\n        );\n    }\n}\n\nexport default AdminTabs;","import React, { Component } from 'react';\nimport AdminTabs from './AdminTabs';\n\nclass Admin extends Component {\n    render() {\n        return(\n            <div>\n                <AdminTabs/>\n            </div>\n        );\n    }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport {Navbar, NavItem} from 'react-materialize';\nimport Form from './Form.js';\nimport CheckInOut from './CheckInOut.js';\nimport Admin from './Admin.js';\nimport Logo from './aubdaycare.png';\nimport './App.css';\nimport firebase from './firebase.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayCheckInOut: false,\n      displayAdmin: false,\n      id:''\n    }\n  }\n\n  handleEnterClick(idValue) {\n    this.setState({displayCheckInOut: true, id:idValue});\n  }\n\n  handleCancelClick() {\n    this.setState({displayCheckInOut: false, displayAdmin: false, id: ''});\n  }\n\n  handleAdminClick() {\n    this.setState({displayAdmin:true});\n  }\n\n  handleHomeClick() {\n    this.setState({displayCheckInOut: false, displayAdmin: false});\n  }\n\n  render() {\n    const shouldDisplayCheckInOut = this.state.displayCheckInOut;\n    const shouldDisplayAdmin = this.state.displayAdmin;\n    var id = '';\n    return (\n      <div>\n        <nav>\n          <Navbar className=\"Nav\" brand='Day Care Portal' right>\n            <NavItem onClick={this.handleHomeClick.bind(this)}>Home</NavItem>\n            <NavItem onClick={this.handleAdminClick.bind(this)}>Admin</NavItem>\n          </Navbar>\n        </nav>\n        {shouldDisplayAdmin ? <Admin/> : \n        (<div>\n          <header className=\"App-header\">\n            <img src={Logo} alt=\"\"/>\n          </header>\n          <div className=\"App\">{shouldDisplayCheckInOut ? <CheckInOut currentId={this.state.id} cancelClickHandler={this.handleCancelClick.bind(this)}/> : <Form enterClickHandler={this.handleEnterClick.bind(this)}/>}</div>\n        </div>)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}