{"version":3,"sources":["aubdaycare.png","Form.js","firebase.js","Confirmation.js","CheckInOut.js","PersonInfo.js","Lookup.js","ModifyForm.js","Modify.js","TeacherInfo.js","TeacherLookup.js","GroupInfo.js","GroupLookup.js","AdminTabs.js","Admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","role","e","setState","target","value","console","log","enterClickHandler","react_default","a","createElement","lib","offset","s","m","l","label","type","defaultValue","onChange","handleRoleChange","bind","handleInputChange","waves","onClick","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Confirmation","database","ref","update","time","action","CheckInOut","checkIn","confirmed","person_name","person_time","person_id","current_time","_this2","currentId","currentRole","on","snapshot","member","val","memberName","first_name","last_name","lastAction","latest_check","cancelClickHandler","currentTimestamp","Date","toLocaleString","isCheckIn","isConfirmed","className","src_Confirmation","checkInOutHandler","PersonInfo","name","address","phone","emergency_contact_name","emergency_contact_relationship","group","contactInfo","contact_info","emergencyContact","emergency_contact","street_address","city","postal_code","relationship","backClickHandler","Lookup","displayInfo","shouldDisplayInfo","src_PersonInfo","handleBackClick","handleSearchClick","ModifyForm","latestCheck","emergency_contact_first_name","emergency_contact_last_name","emergency_contact_phone","latest_check_type","latest_check_time","disabled","handleFirstNameChange","handleLastNameChange","handleStreetAddressChange","handleCityChange","handleStateChange","handlePostalCodeChange","handleEmergencyFirstNameChange","handleEmergencyLastNameChange","handleEmergencyPhoneChange","handleEmergencyRelationshipChange","handleLatestCheckTypeChange","handleLatestCheckTimeChange","handleSave","Modify","student_members","teacher_members","displayForm","members","newState","push","student_id","student_name","student_check_in_out","student_check_in_out_time","teacher_id","teacher_name","teacher_check_in_out","teacher_check_in_out_time","_this3","shouldDisplayForm","src_ModifyForm","data-field","map","handleEditClick","TeacherInfo","teacherDetails","teacher_details","certification","hireDate","hire_date","shift","TeacherLookup","src_TeacherInfo","GroupInfo","classrooms","groupType","newClassrooms","classroom","capacity","roomNumber","room_number","GroupLookup","src_GroupInfo","AdminTabs","title","active","src_Modify","src_Lookup","src_TeacherLookup","src_GroupLookup","Admin","src_AdminTabs","App","displayCheckInOut","displayAdmin","idValue","roleValue","shouldDisplayCheckInOut","shouldDisplayAdmin","brand","right","handleHomeClick","handleAdminClick","src_Admin","src","Logo","alt","src_CheckInOut","handleCancelClick","src_Form","handleEnterClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8c18905.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aubdaycare.aaca6e2a.png\";","import React, {Component} from 'react';\nimport {Row, Input, Col, Button} from 'react-materialize';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {\n            id: '',\n            role: 'student'\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n    }\n\n    handleRoleChange(e) {\n        this.setState({role: e.target.value});\n    }\n\n    enterClickHandler() {\n        var id = this.state.id;\n        console.log('entered id:  ', id);\n        this.props.enterClickHandler(this.state.id, this.state.role);\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Please select student or teacher role.</h4>\n                <Row>\n                <Col offset=\"s3 m3 l4\"></Col>\n                <Input s={6} m={6} l={4} label=\"Student or Teacher\" type='select' defaultValue='student' onChange={this.handleRoleChange.bind(this)}>\n                    <option value='student'>Student</option>\n                    <option value='teacher'>Teacher</option>\n                </Input>\n                </Row>\n                <h4>Please enter your ID to check in or check out. </h4>\n                <Row>\n                    <Col offset=\"s3 m3 l4\"></Col>\n                    <Input s={6} m={6} l={4} label=\"Student or Teacher ID\" onChange={this.handleInputChange.bind(this)} />\n                </Row>\n                <Row>\n                    <Button waves='light' onClick={this.enterClickHandler.bind(this)}>Enter</Button>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Form; ","import firebase from 'firebase';\n\n// Initialize Firebase\nconst config = {\napiKey: \"AIzaSyDN3-czdUpwlkRPjKhfTOczV_gHU7TN1CI\",\nauthDomain: \"daycare-b176c.firebaseapp.com\",\ndatabaseURL: \"https://daycare-b176c.firebaseio.com\",\nprojectId: \"daycare-b176c\",\nstorageBucket: \"daycare-b176c.appspot.com\",\nmessagingSenderId: \"88878176556\"\n};\nfirebase.initializeApp(config);\n\nexport default firebase; ","import React, { Component } from 'react';\nimport firebase from './firebase.js';\n\nclass Confirmation extends Component {\n    componentDidMount() {\n        if(this.props.role === 'student') {\n            firebase.database().ref('daycare/students/' + this.props.id + '/latest_check').update({\n                'time': this.props.time, \n                'type': this.props.action\n            });\n        } else if(this.props.role === 'teacher') {\n            firebase.database().ref('daycare/teachers/' + this.props.id + '/latest_check').update({\n                'time': this.props.time, \n                'type': this.props.action\n            });\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Thank you! You have been successfully <b>checked {this.props.action}!</b></h4>\n            </div>\n        );\n    }\n}\n\nexport default Confirmation; ","import React, { Component } from 'react';\nimport { Input, Button } from 'react-materialize';\nimport Confirmation from './Confirmation.js';\nimport firebase from './firebase.js'\n\nclass CheckInOut extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            checkIn: true,\n            confirmed: false,\n            action: '',\n            person_name: '',\n            person_time: '', \n            person_id: '',\n            current_time: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setState({person_id : this.props.currentId, role: this.props.currentRole});\n        if(this.props.currentRole === 'student') {\n            const memberRef = firebase.database().ref('daycare/students/' + this.props.currentId);\n            memberRef.on('value',(snapshot) => {\n                let member = snapshot.val();\n                let memberName = member.first_name + ' ' + member.last_name;\n                let lastAction = member.latest_check.type;\n                if(lastAction === 'in') {\n                    this.setState({\n                        checkIn: true, \n                        person_name: memberName,\n                        person_time: member.latest_check.time\n                    });\n                } else if (lastAction === 'out') {\n                    this.setState({\n                        checkIn: false, \n                        person_name: memberName,\n                        person_time: member.latest_check.time\n                    })\n                }\n            });\n        } else if(this.props.currentRole === 'teacher') {\n            const memberRef = firebase.database().ref('daycare/teachers/' + this.props.currentId);\n            memberRef.on('value',(snapshot) => {\n                let member = snapshot.val();\n                let memberName = member.first_name + ' ' + member.last_name;\n                let lastAction = member.latest_check.type;\n                if(lastAction === 'in') {\n                    this.setState({\n                        checkIn: true, \n                        person_name: memberName,\n                        person_time: member.latest_check.time\n                    });\n                } else if (lastAction === 'out') {\n                    this.setState({\n                        checkIn: false, \n                        person_name: memberName,\n                        person_time: member.latest_check.time\n                    })\n                }\n            });\n        }\n    }\n\n    cancelClickHandler() {\n        this.props.cancelClickHandler();\n    }\n\n    checkInOutHandler() {\n        // For now console logging -- will obviously store something in the DB\n        var currentTimestamp = new Date().toLocaleString();\n\n        if(this.state.checkIn) {\n            console.log('Check OUT Recorded');\n            this.setState({action: 'out'});\n            console.log('Checked OUT at ' + currentTimestamp);\n        } else {\n            console.log('Check IN Recorded');\n            this.setState({action: 'in'});\n            console.log('Checked IN at ' + currentTimestamp);\n        }\n\n        this.setState({confirmed: true, current_time: currentTimestamp});\n    }\n\n    render() {\n        const isCheckIn = this.state.checkIn;\n        const isConfirmed = this.state.confirmed;\n        \n        return(\n            <div className='CheckInOut'>\n            {isConfirmed ? <Confirmation action={this.state.action} time={this.state.current_time} id={this.state.person_id} role={this.state.role}/>\n                :\n                <div className='PersonInfo'>\n                    <h4>ID NUMBER: {this.props.currentId}</h4>\n                    <h4>Name: {this.state.person_name}</h4>\n                    {isCheckIn ? <h5>Last Check In Time: {this.state.person_time}</h5> : <h5>Last Check Out Time: {this.state.person_time}</h5>}\n                    <Button className='red lighten-2' waves='light' onClick={this.cancelClickHandler.bind(this)}>CANCEL</Button> {isCheckIn ? <Button waves='light' onClick={this.checkInOutHandler.bind(this)}>CHECKOUT</Button> : <Button waves='light' onClick={this.checkInOutHandler.bind(this)}>CHECKIN</Button>}\n                </div>}       \n            </div>\n        );\n    }\n}\n\nexport default CheckInOut;","import React, { Component } from 'react'; \nimport { Button } from 'react-materialize';\nimport firebase from './firebase.js'; \n\nclass PersonInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            name: '',\n            address:'',\n            phone: '',\n            emergency_contact_name: '',\n            emergency_contact_relationship: '',\n            group: ''\n        };\n    }\n\n    componentDidMount() {\n        this.setState({id: this.props.id});\n        console.log('id' + this.props.id);\n        const memberRef = firebase.database().ref('daycare/students/' + this.props.id);\n        memberRef.on('value', (snapshot) => {\n            let member = snapshot.val();\n            let contactInfo = member.contact_info;\n            let emergencyContact = member.emergency_contact; \n            this.setState({\n                name: member.first_name + ' ' + member.last_name,\n                address: contactInfo.street_address + ' ' + contactInfo.city + ' ' + contactInfo.state + ' ' + contactInfo.postal_code,\n                phone: contactInfo.phone,\n                emergency_contact_name: emergencyContact.first_name + ' ' + emergencyContact.last_name,\n                emergency_contact_relationship: emergencyContact.relationship\n            });\n        });\n    }\n\n    backClickHandler() {\n        this.props.backClickHandler();\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Information</h4>\n                <h5>Name: {this.state.name}</h5>\n                <h5>Address: {this.state.address}</h5>\n                <h5>Phone: {this.state.phone}</h5>\n                <h4>Emergency Information</h4>\n                <h5>Emergency Contact: {this.state.emergency_contact_name}</h5>\n                <h5>Emergency Phone: {this.state.phone}</h5>\n                <h5>Relationship: {this.state.emergency_contact_relationship}</h5>\n                <Button waves='light' onClick={this.backClickHandler.bind(this)}>Back</Button>\n            </div>\n        );\n    }\n}\n\nexport default PersonInfo; ","import React, { Component } from 'react';\nimport { Row, Col, Input, Button } from 'react-materialize';\nimport PersonInfo from './PersonInfo';\n\nclass Lookup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            id: '',\n            displayInfo: false\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n        console.log(\"ID VAL: \" + e.target.value);\n    }\n\n    handleSearchClick() {\n        this.setState({displayInfo: true});\n    }\n\n    handleBackClick() {\n        this.setState({id: '', displayInfo: false});\n    }\n\n    render() {\n        const shouldDisplayInfo = this.state.displayInfo;\n\n        return(\n            <div className=\"Lookup\">\n                {shouldDisplayInfo ? <PersonInfo backClickHandler={this.handleBackClick.bind(this)} id={this.state.id}/> : \n                    <div>\n                        <h4>Please enter a student ID to retrieve student information.</h4>\n                        <Row>\n                            <Col offset=\"s3 m3 l4\"></Col>\n                            <Input s={6} m={6} l={4} label=\"Student or Teacher ID\" onChange={this.handleInputChange.bind(this)} />\n                        </Row>\n                        <Row>\n                            <Button waves='light' onClick={this.handleSearchClick.bind(this)}>Search</Button>\n                        </Row>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Lookup;","import React, { Component } from 'react';\nimport { Row, Input, Button } from 'react-materialize';\nimport firebase from './firebase.js';\n\nclass ModifyForm extends Component {\n    componentWillMount() {\n        const memberRef = firebase.database().ref('daycare/' + this.props.currentId);\n        memberRef.on('value', (snapshot) => {\n            let member = snapshot.val();\n            let contactInfo = member.contact_info;\n            let emergencyContact = member.emergency_contact;\n            let latestCheck = member.latest_check;\n            this.setState({\n                id: member.id, \n                first_name: member.first_name,\n                last_name: member.last_name,\n                street_address: contactInfo.street_address, \n                city: contactInfo.city, \n                state: contactInfo.state, \n                postal_code: contactInfo.postal_code, \n                emergency_contact_first_name: emergencyContact.first_name,\n                emergency_contact_last_name: emergencyContact.last_name,\n                emergency_contact_phone: contactInfo.phone,\n                emergency_contact_relationship: emergencyContact.relationship,\n                latest_check_type: latestCheck.type,\n                latest_check_time: latestCheck.time\n            });\n        });\n    }\n\n    handleFirstNameChange(e){\n        this.setState({first_name: e.target.value});\n    }\n\n    handleLastNameChange(e){\n        this.setState({last_name: e.target.value});\n    }\n\n    handleStreetAddressChange(e){\n        this.setState({street_address: e.target.value});\n    }\n\n    handleCityChange(e){\n        this.setState({city: e.target.value});\n    }\n\n    handleStateChange(e){\n        this.setState({state: e.target.value});\n    }\n\n    handlePostalCodeChange(e) {\n        this.setState({postal_code: e.target.value});\n    }\n\n    handleEmergencyFirstNameChange(e){\n        this.setState({emergency_contact_first_name: e.target.value});\n    }\n\n    handleEmergencyLastNameChange(e){\n        this.setState({emergency_contact_last_name: e.target.value});\n    }\n\n    handleEmergencyRelationshipChange(e){\n        this.setState({emergency_contact_relationship: e.target.value});\n    }\n\n    handleEmergencyPhoneChange(e){\n        this.setState({emergency_contact_phone: e.target.value});\n    }\n\n    handleLatestCheckTypeChange(e){\n        this.setState({latest_check_type: e.target.value});\n    }\n\n    handleLatestCheckTimeChange(e){\n        this.setState({latest_check_time: e.target.value});\n    }\n\n    handleSave() {\n        // update names \n        firebase.database().ref('daycare/' + this.state.id).update({\n            first_name: this.state.first_name, \n            last_name: this.state.last_name\n        });\n\n        // update contact info\n        firebase.database().ref('daycare/' + this.state.id + '/contact_info').update({\n            street_address: this.state.street_address,\n            city: this.state.city,\n            state: this.state.state,\n            postal_code: this.state.postal_code,\n            phone: this.state.emergency_contact_phone\n        });\n\n        // update emergency contact info\n        firebase.database().ref('daycare/' + this.state.id + '/emergency_contact').update({\n            first_name: this.state.emergency_contact_first_name,\n            last_name: this.state.emergency_contact_last_name,\n            relationship: this.state.emergency_contact_relationship\n        });\n\n        // update latest check\n        firebase.database().ref('daycare/' + this.state.id + '/latest_check').update({\n            type: this.state.latest_check_type,\n            time: this.state.latest_check_time\n        });\n\n        // Go back\n        this.props.backClickHandler();\n    }\n\n    render() {\n        return(\n            <div className=\"Modify-form\">\n            <Row>\n                <h4>Information</h4>\n                <Input s={12} label=\"ID\" defaultValue={this.state.id} disabled />\n                <Input s={6} label=\"First Name\" defaultValue={this.state.first_name} onChange={this.handleFirstNameChange.bind(this)}/>\n                <Input s={6} label=\"Last Name\" defaultValue={this.state.last_name} onChange={this.handleLastNameChange.bind(this)}/>\n                <Input s={12} label=\"Street Address\" defaultValue={this.state.street_address} onChange={this.handleStreetAddressChange.bind(this)}/>\n                <Input s={6} label=\"City\" defaultValue={this.state.city} onChange={this.handleCityChange.bind(this)}/>\n                <Input s={3} label=\"State\" defaultValue={this.state.state} onChange={this.handleStateChange.bind(this)}/>\n                <Input s={3} label=\"Postal Code\" defaultValue={this.state.postal_code} onChange={this.handlePostalCodeChange.bind(this)}/>\n            </Row>\n            <Row>\n                <h4>Emergency Contact</h4>\n                <Input s={6} label=\"Emergency Contact First Name\" defaultValue={this.state.emergency_contact_first_name} onChange={this.handleEmergencyFirstNameChange.bind(this)}/>\n                <Input s={6} label=\"Emergency Contact Last Name\" defaultValue={this.state.emergency_contact_last_name} onChange={this.handleEmergencyLastNameChange.bind(this)}/>\n                <Input s={6} label=\"Emergency Contact Phone\" defaultValue={this.state.emergency_contact_phone} onChange={this.handleEmergencyPhoneChange.bind(this)}/>\n                <Input s={6} label=\"Emergency Contact Relationship\" defaultValue={this.state.emergency_contact_relationship} onChange={this.handleEmergencyRelationshipChange.bind(this)}/>\n            </Row>\n            <Row>\n                <h4>Last Check In / Out</h4>\n                <Input s={6} label=\"Check In or Out\" type='select' defaultValue={this.state.latest_check_type} onChange={this.handleLatestCheckTypeChange.bind(this)}>\n                    <option value='in'>Check In</option>\n                    <option value='out'>Check Out</option>\n                </Input>\n                <Input s={6} label=\"Time\" defaultValue={this.state.latest_check_time} onChange={this.handleLatestCheckTimeChange.bind(this)}/>\n            </Row>\n            <Button className='red lighten-2' waves='light' onClick={this.props.backClickHandler}>Back</Button>  <Button waves='light' onClick={this.handleSave.bind(this)}>Save</Button>\n            </div>\n        );\n    }\n}\n\nexport default ModifyForm;","import React, { Component } from 'react';\nimport { Table, Button } from 'react-materialize';\nimport firebase from './firebase.js';\nimport ModifyForm from './ModifyForm.js';\n\nclass Modify extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            student_members: [], \n            teacher_members: [],\n            displayForm: false, \n            currentId: ''\n        }\n    }\n\n    componentDidMount() {\n        const studentsRef = firebase.database().ref('daycare/students');\n        studentsRef.on('value', (snapshot) => {\n            let members = snapshot.val();\n            let newState = [];\n            for(let member in members) {\n                newState.push({\n                    student_id: members[member].id, \n                    student_name: members[member].first_name + ' ' + members[member].last_name,\n                    student_check_in_out: members[member].latest_check.type, \n                    student_check_in_out_time: members[member].latest_check.time \n                })\n            }\n            this.setState({student_members: newState});\n        });\n\n        const teachersRef = firebase.database().ref('daycare/teachers');\n        teachersRef.on('value', (snapshot) => {\n            let members = snapshot.val();\n            let newState = [];\n            for(let member in members) {\n                newState.push({\n                    teacher_id: members[member].id, \n                    teacher_name: members[member].first_name + ' ' + members[member].last_name,\n                    teacher_check_in_out: members[member].latest_check.type, \n                    teacher_check_in_out_time: members[member].latest_check.time \n                })\n            }\n            this.setState({teacher_members: newState});\n        });\n    }\n\n    handleEditClick(id) {\n        this.setState({displayForm: true, currentId: id});\n    }\n\n    handleBackClick() {\n        this.setState({displayForm: false});\n    }\n\n    render() {\n        const shouldDisplayForm = this.state.displayForm;\n        return(\n            <div>\n                { shouldDisplayForm ? \n                <ModifyForm backClickHandler={this.handleBackClick.bind(this)} currentId={this.state.currentId}/> : \n                <div>\n                <h4>Students</h4>\n                <Table>\n                <thead>\n                    <tr>\n                    <th data-field=\"id\">ID</th>\n                    <th data-field=\"name\">Name</th>\n                    <th data-field=\"check-in-out\">Check In / Out</th>\n                    <th data-field=\"time\">Time</th>\n                    <th data-field=\"modify\">Modify</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.student_members.map((member) => {\n                        var currentId = member.student_id;\n                        return(\n                            <tr>\n                                <td>{member.student_id}</td>\n                                <td>{member.student_name}</td>\n                                <td>check {member.student_check_in_out}</td>\n                                <td>{member.student_check_in_out_time}</td>\n                                <td><Button waves='light' onClick={this.handleEditClick.bind(this, currentId)}>Edit</Button></td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n                </Table>\n\n                <h4>Teachers</h4>\n                <Table>\n                <thead>\n                    <tr>\n                    <th data-field=\"id\">ID</th>\n                    <th data-field=\"name\">Name</th>\n                    <th data-field=\"check-in-out\">Check In / Out</th>\n                    <th data-field=\"time\">Time</th>\n                    <th data-field=\"modify\">Modify</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {this.state.teacher_members.map((member) => {\n                        var currentId = member.teacher_id;\n                        return(\n                            <tr>\n                                <td>{member.teacher_id}</td>\n                                <td>{member.teacher_name}</td>\n                                <td>check {member.teacher_check_in_out}</td>\n                                <td>{member.teacher_check_in_out_time}</td>\n                                <td><Button waves='light' onClick={this.handleEditClick.bind(this, currentId)}>Edit</Button></td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n                </Table>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Modify; ","import React, { Component } from 'react'; \nimport { Button } from 'react-materialize';\nimport firebase from './firebase.js'; \n\nclass TeacherInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            name: '',\n            address:'',\n            phone: '',\n            emergency_contact_name: '',\n            emergency_contact_relationship: '',\n            group: ''\n        };\n    }\n\n    componentDidMount() {\n        this.setState({id: this.props.id});\n        console.log('id' + this.props.id);\n        const memberRef = firebase.database().ref('daycare/teachers/' + this.props.id);\n        memberRef.on('value', (snapshot) => {\n            let member = snapshot.val();\n            let contactInfo = member.contact_info;\n            let teacherDetails = member.teacher_details; \n            this.setState({\n                name: member.first_name + ' ' + member.last_name,\n                address: contactInfo.street_address + ' ' + contactInfo.city + ' ' + contactInfo.state + ' ' + contactInfo.postal_code,\n                phone: contactInfo.phone,\n                certification: teacherDetails.certification, \n                hireDate: teacherDetails.hire_date, \n                shift: teacherDetails.shift\n            });\n        });\n    }\n\n    backClickHandler() {\n        this.props.backClickHandler();\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Information</h4>\n                <h5>Name: {this.state.name}</h5>\n                <h5>Address: {this.state.address}</h5>\n                <h5>Phone: {this.state.phone}</h5>\n                <h5>Certification: {this.state.certification}</h5>\n                <h5>Hire Date: {this.state.hireDate}</h5>\n                <h5>Shift: {this.state.shift}</h5>\n                <Button waves='light' onClick={this.backClickHandler.bind(this)}>Back</Button>\n            </div>\n        );\n    }\n}\n\nexport default TeacherInfo; ","import React, { Component } from 'react';\nimport { Row, Col, Input, Button } from 'react-materialize'\nimport TeacherInfo from './TeacherInfo.js';\n\nclass TeacherLookup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            id: '',\n            displayInfo: false\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n        console.log(\"ID VAL: \" + e.target.value);\n    }\n\n    handleSearchClick() {\n        this.setState({displayInfo: true});\n    }\n\n    handleBackClick() {\n        this.setState({id: '', displayInfo: false});\n    }\n\n    render() {\n        const shouldDisplayInfo = this.state.displayInfo;\n        return(\n            <div className=\"Lookup\">\n                {shouldDisplayInfo ? <TeacherInfo backClickHandler={this.handleBackClick.bind(this)} id={this.state.id}/> : \n                <div>\n                <h4>Please enter a Teacher ID to retrieve Teacher information.</h4>\n                <Row>\n                    <Col offset=\"s3 m3 l4\"></Col>\n                    <Input s={6} m={6} l={4} label=\"Teacher ID\" onChange={this.handleInputChange.bind(this)} />\n                </Row>\n                <Row>\n                    <Button waves='light' onClick={this.handleSearchClick.bind(this)}>Search</Button>\n                </Row>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default TeacherLookup;","import React, { Component } from 'react'; \nimport { Button } from 'react-materialize';\nimport firebase from './firebase.js'; \n\nclass GroupInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '', \n            type: '',\n            classrooms: []\n        };\n    }\n\n    componentDidMount() {\n        this.setState({id: this.props.id});\n        console.log('id' + this.props.id);\n        const memberRef = firebase.database().ref('daycare/groups/' + this.props.id);\n        memberRef.on('value', (snapshot) => {\n            let member = snapshot.val();\n            let groupType = member.type;\n            let classrooms = member.classrooms;\n            let newClassrooms = [];\n            for(let classroom in classrooms) {\n                newClassrooms.push({\n                    id: classrooms[classroom].id, \n                    capacity: classrooms[classroom].capacity,\n                    roomNumber: classrooms[classroom].room_number\n                })\n            }\n            this.setState({type: groupType, classrooms: newClassrooms});\n        });\n    }\n\n    backClickHandler() {\n        this.props.backClickHandler();\n    }\n\n    render() {\n        return(\n            <div>\n                <h4>Information</h4>\n                <h5>Group {this.state.id}</h5>\n                <h5>Type: {this.state.type}</h5>\n                {this.state.classrooms.map((classroom) => {\n                    return(\n                        <div>\n                        <h5><b>Classroom {classroom.id}</b></h5>\n                        <h5>Capacity: {classroom.capacity}</h5>\n                        <h5>Room Number: {classroom.roomNumber}</h5>\n                        </div>\n                    );\n                })}\n                <Button waves='light' onClick={this.backClickHandler.bind(this)}>Back</Button>\n            </div>\n        );\n    }\n}\n\nexport default GroupInfo; ","import React, { Component } from 'react';\nimport { Row, Col, Input, Button } from 'react-materialize'\nimport GroupInfo from './GroupInfo.js';\n\nclass GroupLookup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            id: '',\n            displayInfo: false\n        }\n    }\n\n    handleInputChange(e){\n        this.setState({id: e.target.value});\n        console.log(\"ID VAL: \" + e.target.value);\n    }\n\n    handleSearchClick() {\n        this.setState({displayInfo: true});\n    }\n\n    handleBackClick() {\n        this.setState({id: '', displayInfo: false});\n    }\n\n    render() {\n        const shouldDisplayInfo = this.state.displayInfo;\n        return(\n            <div className=\"Lookup\">\n                {shouldDisplayInfo ? <GroupInfo backClickHandler={this.handleBackClick.bind(this)} id={this.state.id}/> : \n                <div>\n                <h4>Please enter a Group ID to retrieve Group information.</h4>\n                <Row>\n                    <Col offset=\"s3 m3 l4\"></Col>\n                    <Input s={6} m={6} l={4} label=\"Group ID\" onChange={this.handleInputChange.bind(this)} />\n                </Row>\n                <Row>\n                    <Button waves='light' onClick={this.handleSearchClick.bind(this)}>Search</Button>\n                </Row>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default GroupLookup;","import React, { Component } from 'react';\nimport { Tab, Tabs, Row } from 'react-materialize';\nimport Lookup from './Lookup.js';\nimport Modify from './Modify.js';\nimport TeacherLookup from './TeacherLookup.js';\nimport GroupLookup from './GroupLookup.js';\n\nclass AdminTabs extends Component {\n    render() {\n        return(\n            <div className=\"Admin-tabs\">\n            <Row>\n                <Tabs className='tab-demo z-depth-1'>\n                    <Tab title=\"History\" active><Modify/></Tab>\n                    <Tab title=\"Student Lookup\"><Lookup/></Tab>\n                    <Tab title=\"Teacher Lookup\"><TeacherLookup/></Tab>\n                    <Tab title=\"Group Lookup\"><GroupLookup/></Tab>\n                </Tabs>\n            </Row>\n            </div>\n        );\n    }\n}\n\nexport default AdminTabs;","import React, { Component } from 'react';\nimport AdminTabs from './AdminTabs';\n\nclass Admin extends Component {\n    render() {\n        return(\n            <div>\n                <AdminTabs/>\n            </div>\n        );\n    }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport {Navbar, NavItem} from 'react-materialize';\nimport Form from './Form.js';\nimport CheckInOut from './CheckInOut.js';\nimport Admin from './Admin.js';\nimport Logo from './aubdaycare.png';\nimport './App.css';\nimport firebase from './firebase.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayCheckInOut: false,\n      displayAdmin: false,\n      id:'', \n      role: 'student'\n    }\n  }\n\n  handleEnterClick(idValue, roleValue) {\n    this.setState({displayCheckInOut: true, id:idValue, role:roleValue});\n  }\n\n  handleCancelClick() {\n    this.setState({displayCheckInOut: false, displayAdmin: false, id: ''});\n  }\n\n  handleAdminClick() {\n    this.setState({displayAdmin:true});\n  }\n\n  handleHomeClick() {\n    this.setState({displayCheckInOut: false, displayAdmin: false});\n  }\n\n  render() {\n    const shouldDisplayCheckInOut = this.state.displayCheckInOut;\n    const shouldDisplayAdmin = this.state.displayAdmin;\n    var id = '';\n    return (\n      <div>\n        <nav>\n          <Navbar className=\"Nav\" brand='Day Care Portal' right>\n            <NavItem onClick={this.handleHomeClick.bind(this)}>Home</NavItem>\n            <NavItem onClick={this.handleAdminClick.bind(this)}>Admin</NavItem>\n          </Navbar>\n        </nav>\n        {shouldDisplayAdmin ? <Admin/> : \n        (<div>\n          <header className=\"App-header\">\n            <img src={Logo} alt=\"\"/>\n          </header>\n          <div className=\"App\">{shouldDisplayCheckInOut ? <CheckInOut currentId={this.state.id} currentRole={this.state.role} cancelClickHandler={this.handleCancelClick.bind(this)}/> : <Form enterClickHandler={this.handleEnterClick.bind(this)}/>}</div>\n        </div>)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}